#!/bin/sh

# qio-config
#
# James C. Osborn
#
# Tool for retrieving configuration information about the installed version
# of QIO.
#
# copied from qmp-config

prefix=$(dirname "$0")/..
version="@PROJECT_VERSION@"

qio_parallel_arch="@PARALLEL_ARCH@"
qio_cc="@CMAKE_C_COMPILER@"
qio_cflags="-I$prefix/include"
qio_ldflags="-L$prefix/lib -Wl,-rpath=$prefix/lib"
if test "X@CLime_LIBDIR@" != "X";
then
  qio_cflags=$qio_cflags" -I@CLime_INCDIR@"
  qio_ldflags=$qio_ldflags" -L@CLime_LIBDIR@ -Wl.-rpath=@CLime_LIBDIR@"
fi
 
qio_libs="-lqio -llime"
qio_ranlib="@CMAKE_RANLIB@"
qio_ar="@CMAKE_AR@"

usage()
{
  cat <<EOF
Usage: qio-config [OPTIONS]
Options:
  [--prefix[=DIR]]
  [--version]
  [--arch]
  [--cc]
  [--cflags]
  [--ldflags]
  [--libs]
  [--ranlib]
  [--ar]

EOF
  exit $1
}

if test $# -eq 0; then
  usage 1 1>&2
fi

while test $# -gt 0; do
  case "$1" in
    -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *)    optarg= ;;
  esac

  case $1 in
    --prefix=*)
      prefix=$optarg
      ;;

    --prefix)
      echo_prefix=yes
      ;;

    --version)
      echo $version
      ;;

    --arch)
      echo $qio_parallel_arch
      ;;

    --cc)
      echo $qio_cc
      ;;

    --cflags)
      echo_cflags=yes
      ;;

    --ldflags)
      echo_ldflags=yes
      ;;

    --libs)
      echo_libs=yes
      ;;

    --ranlib)
      echo $qio_ranlib
      ;;
    --ar)
      echo $qio_ar
      ;;
    *)
      usage 1 1>&2
      ;;

  esac
  shift
done

if test "X$echo_prefix" = "Xyes" ; then
  echo $prefix
fi

if test "X$echo_cflags" = "Xyes" ; then
  output_cflags=
  for i in $qio_cflags ; do
    case $i in
      -I/usr/include) ;;
      -g) ;;
      -O*) ;;
      -W*) ;;
      *)
        case " $output_cflags " in
          *\ $i\ *) ;;                             # already there, skip it
          *) output_cflags="$output_cflags $i"     # add it to output
        esac
    esac
  done
  echo $output_cflags
fi

if test "X$echo_ldflags" = "Xyes" ; then
  output_ldflags=
  for i in $qio_ldflags ; do
    if test "X$i" != "X-I/usr/lib" ; then
      case " $output_ldflags " in
        *\ $i\ *) ;;                               # already there, skip it
        *) output_ldflags="$output_ldflags $i"     # add it to output
      esac
    fi
  done
  echo $output_ldflags
fi

# Straight out any possible duplicates, but be careful to
# get `-lfoo -lbar -lbaz' for `-lfoo -lbaz -lbar -lbaz'

if test "X$echo_libs" = "Xyes" ; then
  rev_libs=
  for i in $qio_libs ; do
    rev_libs="$i $rev_libs"
  done
  output_libs=
  for i in $rev_libs ; do
    case " $output_libs " in
      *\ $i\ *) ;;                         # already there, skip it
      *) output_libs="$i $output_libs" ;;  # add it to output in reverse order
    esac
  done
  echo $output_libs
fi
